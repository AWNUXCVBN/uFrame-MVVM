// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using uFrame.MVVM;

namespace uFrame.DefaultProject {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using Invert.StateMachine;
    
    
    public class ScreenFlow : Invert.StateMachine.StateMachine {
        
        private Invert.StateMachine.StateMachineTrigger _Next;
        
        private MainMenu _MainMenu;
        
        private GameConfig _GameConfig;
        
        public ScreenFlow(ViewModel vm, string propertyName) : 
                base(vm, propertyName) {
        }
        
        public ScreenFlow() : 
                base(null, string.Empty) {
        }
        
        public override Invert.StateMachine.State StartState {
            get {
                return this.MainMenu;
            }
        }
        
        public virtual Invert.StateMachine.StateMachineTrigger Next {
            get {
                if (this._Next == null) {
                    this._Next = new StateMachineTrigger(this , "Next");
                }
                return _Next;
            }
            set {
                _Next = value;
            }
        }
        
        public virtual MainMenu MainMenu {
            get {
                if (this._MainMenu == null) {
                    this._MainMenu = new MainMenu();
                }
                return _MainMenu;
            }
            set {
                _MainMenu = value;
            }
        }
        
        public virtual GameConfig GameConfig {
            get {
                if (this._GameConfig == null) {
                    this._GameConfig = new GameConfig();
                }
                return _GameConfig;
            }
            set {
                _GameConfig = value;
            }
        }
        
        public override void Compose(System.Collections.Generic.List<Invert.StateMachine.State> states) {
            base.Compose(states);
            MainMenu.Next = new StateTransition("Next", MainMenu, GameConfig);
            Transitions.Add(MainMenu.Next);
            MainMenu.AddTrigger(Next, MainMenu.Next);
            MainMenu.StateMachine = this;
            states.Add(MainMenu);
            GameConfig.AddTrigger(Next, GameConfig.Next);
            GameConfig.StateMachine = this;
            states.Add(GameConfig);
        }
    }
    
    public class MainMenu : Invert.StateMachine.State {
        
        private Invert.StateMachine.StateTransition _Next;
        
        public Invert.StateMachine.StateTransition Next {
            get {
                return _Next;
            }
            set {
                _Next = value;
            }
        }
        
        public override string Name {
            get {
                return "MainMenu";
            }
        }
        
        public virtual void NextTransition() {
            this.Transition(this.Next);
        }
    }
    
    public class GameConfig : Invert.StateMachine.State {
        
        private Invert.StateMachine.StateTransition _Next;
        
        public Invert.StateMachine.StateTransition Next {
            get {
                return _Next;
            }
            set {
                _Next = value;
            }
        }
        
        public override string Name {
            get {
                return "GameConfig";
            }
        }
        
        public virtual void NextTransition() {
            this.Transition(this.Next);
        }
    }
}
