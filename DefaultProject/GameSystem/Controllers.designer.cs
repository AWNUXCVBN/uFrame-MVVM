// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using uFrame.IOC;
using uFrame.MVVM;

namespace uFrame.DefaultProject {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UniRx;
    
    
    public class LoadingScreenControllerBase : Controller {
        
        private IViewModelManager _LoadingScreenViewModelManager;
        
        private LoadingScreenViewModel _LoadingScreen;
        
        [Inject("LoadingScreen")]
        public IViewModelManager LoadingScreenViewModelManager {
            get {
                return _LoadingScreenViewModelManager;
            }
            set {
                _LoadingScreenViewModelManager = value;
            }
        }
        
        [InjectAttribute("LoadingScreen")]
        public LoadingScreenViewModel LoadingScreen {
            get {
                return _LoadingScreen;
            }
            set {
                _LoadingScreen = value;
            }
        }
        
        public IEnumerable<LoadingScreenViewModel> LoadingScreenViewModels {
            get {
                return LoadingScreenViewModelManager.OfType<LoadingScreenViewModel>();
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeLoadingScreen(((LoadingScreenViewModel)(viewModel)));
        }
        
        public virtual LoadingScreenViewModel CreateLoadingScreen() {
            return ((LoadingScreenViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override ViewModel CreateEmpty() {
            return new LoadingScreenViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeLoadingScreen(LoadingScreenViewModel viewModel) {
            // This is called when a LoadingScreenViewModel is created
            LoadingScreenViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            LoadingScreenViewModelManager.Remove(viewModel);
        }
    }
}
