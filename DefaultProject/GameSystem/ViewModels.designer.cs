// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace uFrame.DefaultProject {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UniRx;
    
    
    public partial class LoadingScreenViewModelBase : ViewModel {
        
        private P<Single> _ProgressProperty;
        
        private P<String> _MessageProperty;
        
        private P<Boolean> _ActiveProperty;
        
        public LoadingScreenViewModelBase(IEventAggregator aggregator) : 
                base(aggregator) {
        }
        
        public virtual P<Single> ProgressProperty {
            get {
                return _ProgressProperty;
            }
            set {
                _ProgressProperty = value;
            }
        }
        
        public virtual P<String> MessageProperty {
            get {
                return _MessageProperty;
            }
            set {
                _MessageProperty = value;
            }
        }
        
        public virtual P<Boolean> ActiveProperty {
            get {
                return _ActiveProperty;
            }
            set {
                _ActiveProperty = value;
            }
        }
        
        public virtual Single Progress {
            get {
                return ProgressProperty.Value;
            }
            set {
                ProgressProperty.Value = value;
            }
        }
        
        public virtual String Message {
            get {
                return MessageProperty.Value;
            }
            set {
                MessageProperty.Value = value;
            }
        }
        
        public virtual Boolean Active {
            get {
                return ActiveProperty.Value;
            }
            set {
                ActiveProperty.Value = value;
            }
        }
        
        public override void Bind() {
            base.Bind();
            _ProgressProperty = new P<Single>(this, "Progress");
            _MessageProperty = new P<String>(this, "Message");
            _ActiveProperty = new P<Boolean>(this, "Active");
        }
        
        public override void Read(ISerializerStream stream) {
            base.Read(stream);
            this.Progress = stream.DeserializeFloat("Progress");;
            this.Active = stream.DeserializeBool("Active");;
        }
        
        public override void Write(ISerializerStream stream) {
            base.Write(stream);
            stream.SerializeFloat("Progress", this.Progress);
            stream.SerializeBool("Active", this.Active);
        }
        
        protected override void FillCommands(System.Collections.Generic.List<ViewModelCommandInfo> list) {
            base.FillCommands(list);
        }
        
        protected override void FillProperties(System.Collections.Generic.List<ViewModelPropertyInfo> list) {
            base.FillProperties(list);
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_ProgressProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_MessageProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_ActiveProperty, false, false, false, false));
        }
    }
    
    public partial class LoadingScreenViewModel {
        
        public LoadingScreenViewModel(IEventAggregator aggregator) : 
                base(aggregator) {
        }
    }
}
